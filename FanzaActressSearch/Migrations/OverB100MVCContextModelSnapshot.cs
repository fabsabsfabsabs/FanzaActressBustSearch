// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using FanzaActressSearch.Data;

namespace FanzaActressSearch.Migrations
{
    [DbContext(typeof(FanzaActressSearchContext))]
    partial class FanzaActressSearchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("FanzaActressSearch.Models.Actress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ActressID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("BloodType")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int>("Bust")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cup")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("DigitalURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Hip")
                        .HasColumnType("int");

                    b.Property<string>("Hobby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLargeURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSmallURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoveCounter")
                        .HasColumnType("int");

                    b.Property<string>("MonoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthlyURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prefectures")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("RentalURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruby")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Waist")
                        .HasColumnType("int");

                    b.Property<int>("WorkCounter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Actress");
                });

            modelBuilder.Entity("FanzaActressSearch.Models.ActressProduct", b =>
                {
                    b.Property<int>("ActressProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ActressID")
                        .HasColumnType("int");

                    b.Property<string>("ProductID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActressProductID");

                    b.ToTable("ActressProduct");
                });

            modelBuilder.Entity("FanzaActressSearch.Models.ActressScrapingResult", b =>
                {
                    b.Property<int>("ActressScrapingResultID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertCount")
                        .HasColumnType("int");

                    b.HasKey("ActressScrapingResultID");

                    b.ToTable("ActressScrapingResult");
                });

            modelBuilder.Entity("FanzaActressSearch.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActressId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActressName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffiliateURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffiliateUrlSp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FloorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrlLarge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrlList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrlSmall")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MakerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MakerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<float>("ReviewAverage")
                        .HasColumnType("real");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("int");

                    b.Property<string>("SampleImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SampleImageURLCount")
                        .HasColumnType("int");

                    b.Property<int>("SampleMovieURLPc")
                        .HasColumnType("int");

                    b.Property<string>("SampleMovieURLSize1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleMovieURLSize2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleMovieURLSize3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleMovieURLSize4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SampleMovieURLSp")
                        .HasColumnType("int");

                    b.Property<string>("SeriesId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeriesName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlSp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
